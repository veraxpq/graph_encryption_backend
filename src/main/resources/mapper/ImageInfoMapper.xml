<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="graph_encryption.domain.client.ImageInfoMapper">
  <resultMap id="BaseResultMap" type="graph_encryption.domain.model.ImageInfo">
    <id column="image_id" jdbcType="INTEGER" property="imageId" />
    <result column="date" jdbcType="TIMESTAMP" property="date" />
    <result column="original_image_url" jdbcType="VARCHAR" property="originalImageUrl" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="message" jdbcType="VARCHAR" property="message" />
    <result column="encrypted_image_url" jdbcType="VARCHAR" property="encryptedImageUrl" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    image_id, date, original_image_url, user_id, password, message, encrypted_image_url
  </sql>
  <select id="selectByExample" parameterType="graph_encryption.domain.model.ImageInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from image_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from image_info
    where image_id = #{imageId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from image_info
    where image_id = #{imageId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="graph_encryption.domain.model.ImageInfoExample">
    delete from image_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="graph_encryption.domain.model.ImageInfo">
    <selectKey keyProperty="imageId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into image_info (date, original_image_url, user_id, 
      password, message, encrypted_image_url
      )
    values (#{date,jdbcType=TIMESTAMP}, #{originalImageUrl,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, 
      #{password,jdbcType=VARCHAR}, #{message,jdbcType=VARCHAR}, #{encryptedImageUrl,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="graph_encryption.domain.model.ImageInfo">
    <selectKey keyProperty="imageId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into image_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="date != null">
        date,
      </if>
      <if test="originalImageUrl != null">
        original_image_url,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="message != null">
        message,
      </if>
      <if test="encryptedImageUrl != null">
        encrypted_image_url,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="date != null">
        #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="originalImageUrl != null">
        #{originalImageUrl,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="message != null">
        #{message,jdbcType=VARCHAR},
      </if>
      <if test="encryptedImageUrl != null">
        #{encryptedImageUrl,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="graph_encryption.domain.model.ImageInfoExample" resultType="java.lang.Long">
    select count(*) from image_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update image_info
    <set>
      <if test="record.imageId != null">
        image_id = #{record.imageId,jdbcType=INTEGER},
      </if>
      <if test="record.date != null">
        date = #{record.date,jdbcType=TIMESTAMP},
      </if>
      <if test="record.originalImageUrl != null">
        original_image_url = #{record.originalImageUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.message != null">
        message = #{record.message,jdbcType=VARCHAR},
      </if>
      <if test="record.encryptedImageUrl != null">
        encrypted_image_url = #{record.encryptedImageUrl,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update image_info
    set image_id = #{record.imageId,jdbcType=INTEGER},
      date = #{record.date,jdbcType=TIMESTAMP},
      original_image_url = #{record.originalImageUrl,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=INTEGER},
      password = #{record.password,jdbcType=VARCHAR},
      message = #{record.message,jdbcType=VARCHAR},
      encrypted_image_url = #{record.encryptedImageUrl,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="graph_encryption.domain.model.ImageInfo">
    update image_info
    <set>
      <if test="date != null">
        date = #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="originalImageUrl != null">
        original_image_url = #{originalImageUrl,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="message != null">
        message = #{message,jdbcType=VARCHAR},
      </if>
      <if test="encryptedImageUrl != null">
        encrypted_image_url = #{encryptedImageUrl,jdbcType=VARCHAR},
      </if>
    </set>
    where image_id = #{imageId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="graph_encryption.domain.model.ImageInfo">
    update image_info
    set date = #{date,jdbcType=TIMESTAMP},
      original_image_url = #{originalImageUrl,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      password = #{password,jdbcType=VARCHAR},
      message = #{message,jdbcType=VARCHAR},
      encrypted_image_url = #{encryptedImageUrl,jdbcType=VARCHAR}
    where image_id = #{imageId,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="graph_encryption.domain.model.ImageInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from image_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>